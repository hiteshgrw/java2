program for recursion in java
package com.company;

public class Main {

    public static void main(String[] args) {
       subsequ_ascii(" ","abc");
        //keypad(" ","19" );
      //  permute(" ","abc");
      //  board(" ", 6);
    }
    public static void subsequ_ascii(String processed , String unprocessed)
    {
        if(unprocessed.isEmpty())
        {
            System.out.println(processed);
            return;
        }
        char ch = unprocessed.charAt(0);
        unprocessed=unprocessed.substring(1);
        subsequ_ascii(processed+ch,unprocessed);
        subsequ_ascii(processed,unprocessed);
        subsequ_ascii(processed+(ch+0),unprocessed);
    }
    public static void keypad(String processed , String unprocessed)
    {
        if(unprocessed.isEmpty())
        {
            System.out.println(processed);
            return;
        }
        int digit = unprocessed.charAt(0) - '0';
        unprocessed=unprocessed.substring(1);
        for (int i = (digit-1)*3; i <digit*3 && i<26; i++) {
            char ch = (char)(i + 'a');
            keypad(processed + ch , unprocessed);
        }
    }
    public static void permute(String processed , String unprocessed)
    {
        if(unprocessed.isEmpty())
        {
            System.out.println(processed);
            return;
        }
        for (int i = 0; i < unprocessed.length() ; i++) {
            char ch = unprocessed.charAt(i);
            permute(processed+ch,unprocessed.substring(0,i)+unprocessed.substring(i+1,unprocessed.length()));
        }
    }
    public static void board(String processed , int target)
    {
        if(target==0)
        {
            System.out.println(processed);
            return;
        }
        for (int i = 1; i <= 6 && i<=target ; i++)
            board(processed+i, target-i);
    }
}
